name: vCnafacul
on:
  pull_request: 
    branches: ["develop"]
    types: [opened, synchronize, reopened, closed]

jobs:
  CI:
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: mysql
          MYSQL_USER: root
          MYSQL_PASSWORD: 123456
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v3
      - name: Iniciando CI
        run: echo "Iniciando CI"
      - uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install sharp depend
        run: yarn add sharp --ignore-engines 
      - name: Load .env.test file
        run: |
          # Export variables from .env.test
          set -o allexport
          source .env.test
          set +o allexport
      - name: Install depends
        run: yarn
      - name: Build app vCnafacul
        run: yarn build
      - name: Run tests
        run: yarn test
  PUSH:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Iniciando CI
        run: echo "Iniciando PUSH"
      - uses: actions/setup-node@v1
        with:
          node-version: 20.x
      - name: Install sharp depend
        run: yarn add sharp --ignore-engines 
      - name: Install depends
        run: yarn
      - name: Build app vCnafacul
        run: yarn build
      - name: Run tests
        run: yarn test
      - name: Build Image
        run: docker build -t vcnafacul -f node.dockerfile .
      - name: docker tags
        run: docker tag vcnafacul vcnafacul/api:latest
      - name: docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Image Push
        run: docker push vcnafacul/api:latest